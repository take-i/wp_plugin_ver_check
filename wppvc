#!/usr/bin/env php
<?php
//error_reporting(E_ALL);
//ini_set('display_errors', '1');

$options = getopt("huv");
if (isset($options['h'])) {
    echo "Usage: script.php [-h] [-u] [-v]\n";
    echo "  -h  Show help information\n";
    echo "  -u  Perform version check and update check\n";
    echo "  -v  Display the plug in information in Markdown in a form like form like WP Plugin List.\n";
    exit(0);
}

if (!isset($options['u']) && !isset($options['v'])) {
    $options['v'] = true;
}

exec('wp plugin list --format=json --fields=name,status,update,version,update_version,update_package,update_id,title,description,file,auto_update', $output, $return_var);

if ($return_var !== 0) {
    echo "Error: Unable to execute `wp plugin list`.\n";
    exit(1);
}

$plugins = json_decode(implode("\n", $output), true);

if ($plugins === null) {
    echo "Error: Unable to decode the output of `wp plugin list`.\n";
    exit(1);
}

if (isset($options['v'])) {
    echo "| No. | name | status | update | version | 備考 |\n";
    echo "| --- | ---- | ------ | ------ | ------- | ---- |\n";

    $counter = 1;
    foreach ($plugins as $plugin) {
        echo "| {$counter} | {$plugin['name']} | {$plugin['status']} | {$plugin['update']} | {$plugin['version']} | ー |\n";
        $counter++;
    }
} else {
    echo "| No. | 更新対象 | name | status | update | version | 最新Ver | WP Tested | PHP ver | Plugin HomePage | WP公式URL | 備考 |\n";
    echo "| --- | -------- | ---- | ------ | ------ | ------- | ------- | --------- | -------- | -------------- | ---------- | ---- |\n";

    $counter = 1;
    foreach ($plugins as $plugin) {
        // Specific exception for 'hello' plugin
        $pluginName = $plugin['name'] === 'hello' && $plugin['title'] === 'Hello Dolly' ? 'hello-dolly' : $plugin['name'];
        $response = @file_get_contents("https://api.wordpress.org/plugins/info/1.0/{$pluginName}.json");

        if ($response === false) {
            echo "| {$counter} | ー | {$plugin['name']} | {$plugin['status']} | {$plugin['update']} | {$plugin['version']} | ー | ー | ー | ー | 公式なし | ー |\n";
            $counter++;
            continue;
        }

        $pluginDetails = json_decode($response, true);

        if ($pluginDetails === null || isset($pluginDetails['error'])) {
            echo "| {$counter} | ー | {$plugin['name']} | {$plugin['status']} | {$plugin['update']} | {$plugin['version']} | ー | ー | ー | ー | 公式なし | ー |\n";
            $counter++;
            continue;
        }

        $updateTarget = version_compare($plugin['version'], $pluginDetails['version'], '<') ? 'レ' : ' ー ';

        $line = "| {$counter} | {$updateTarget} | {$plugin['name']} | {$plugin['status']} | {$plugin['update']} | {$plugin['version']} | ";
        $line .= "{$pluginDetails['version']} | {$pluginDetails['tested']} | {$pluginDetails['requires_php']} | ";
        $line .= "[{$pluginDetails['name']}]({$pluginDetails['homepage']}) | ";
        $line .= "[LINK](https://wordpress.org/plugins/{$pluginDetails['slug']}/) | ー |\n";

        echo $line;
        $counter++;
    }
}
